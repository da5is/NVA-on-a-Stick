{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hubvnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "hubvnet"
        },
        "hubvnetaddressprefix": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "hubvnetnvasubnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "nvasubnet"
        },
        "hubvnetnvasubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.0.0.0/24"
        },
        "hubvnetvmsubnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vmbsubnet"
        },
        "hubvnetvmsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.0.1.0/24"
        },
        "hubvnetbastionsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.0.254.0/24"
        },
        "hubbastionpip": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('hubbastionpip-', uniqueString(resourceGroup().id))]"
        },
        "hubbastionhostname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('hubbastionhost-',uniqueString(resourceGroup().id))]"
        },
        "spoke1vnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "spoke1vnet"
        },
        "spoke1vnetaddressprefix": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.1.0.0/16"
        },
        "spoke1vnetvmsubnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vmsubnet"
        },
        "spoke1vnetvmsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.1.0.0/24"
        },
        "spoke1vnetbastionsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.1.254.0/24"
        },
        "spoke1bastionpip": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('spoke1bastionpip-', uniqueString(resourceGroup().id))]"
        },
        "spoke1bastionhostname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('spoke1bastionhost-',uniqueString(resourceGroup().id))]"
        },
        "spoke2vnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "spoke2vnet"
        },
        "spoke2vnetaddressprefix": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.2.0.0/16"
        },
        "spoke2vnetvmsubnetname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "vmsubnet"
        },
        "spoke2vnetvmsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.2.0.0/24"
        },
        "spoke2vnetbastionsubnet": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "10.2.254.0/24"
        },
        "spoke2bastionpip": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('spoke2bastionpip-', uniqueString(resourceGroup().id))]"
        },
        "spoke2bastionhostname": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat('spoke2bastionhost-',uniqueString(resourceGroup().id))]"
        },
        "vm1name": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('spoke1vm-', uniquestring(resourceGroup().id)))]"
        },
        "vm1disk": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultvalue": "[toLower(concat('spoke1vm-', uniquestring(resourceGroup().id), '-disk'))]"
        },
        "vm1nic": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "spoke1vmnic"
        },
        "vm1storageacct": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('spoke1vm', uniquestring(resourceGroup().id)))]"
        },
        "vm2name": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('spoke2vm-', uniquestring(resourceGroup().id)))]"
        },
        "vm2disk": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultvalue": "[toLower(concat('spoke2vm-', uniquestring(resourceGroup().id), '-disk'))]"
        },
        "vm2nic": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "spoke2vmnic"
        },
        "vm2storageacct": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('spoke2vm', uniquestring(resourceGroup().id)))]"
        },
        "vm3name": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('hub1vm-', uniquestring(resourceGroup().id)))]"
        },
        "vm3disk": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultvalue": "[toLower(concat('hub1vm-', uniquestring(resourceGroup().id), '-disk'))]"
        },
        "vm3nic": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "hub1vmnic"
        },
        "vm3storageacct": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[toLower(concat('hub1vm', uniquestring(resourceGroup().id)))]"
        },
        "adminuser": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "adminuser"
        },
        "adminpassword": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "[concat(toUpper(substring(uniqueString(newGuid()),0,6)), '#', substring(uniqueString(newGuid()),6,6) )]"
        }
    },
    "variables": {
        "routeTableName": "spokeToHub"
    },
    "resources": [
        {
            "name": "[variables('routeTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "properties": {
                "routes": [
                    {
                        "name": "spokeToHub",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hubvnetname')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('hubvnetname')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubvnetaddressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('hubvnetnvasubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubvnetnvasubnet')]"
                        }
                    },
                    {
                        "name": "[parameters('hubvnetvmsubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubvnetvmsubnet')]"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubvnetbastionsubnet')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "virtualNetworkPeerings",
                    "name": "HubToSpoke1",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke1vnetname'))]"
                    ],
                    "comments": "This is the peering from Hub to Spoke 1",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "true",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spoke1vnetname'))]"
                        }
                    }
                },
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "HubToSpoke2",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke2vnetname'))]"
                    ],
                    "comments": "This is the peering from Hub to Spoke 2",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "true",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spoke2vnetname'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('hubbastionpip')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[parameters('hubbastionhostname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('hubbastionpip'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('hubbastionpip'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname')), '/subnets/', 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            },
            "tags": {
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke1vnetname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]"
            ],

            "tags": {
                "displayName": "[parameters('spoke1vnetname')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke1vnetaddressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke1vnetvmsubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke1vnetvmsubnet')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('spoke1vnetbastionsubnet')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "Spoke1ToHub",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke1vnetname'))]"
                    ],
                    "comments": "This is the peering from Spoke 1 to Hub",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubvnetname'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('spoke1bastionpip')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[parameters('spoke1bastionhostname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('spoke1bastionpip'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke1vnetname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('spoke1bastionpip'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname')), '/subnets/', 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            },
            "tags": {
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('spoke2vnetname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]"
            ],
            "tags": {
                "displayName": "[parameters('spoke2vnetname')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke2vnetaddressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spoke2vnetvmsubnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('spoke2vnetvmsubnet')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('spoke2vnetbastionsubnet')]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "2016-06-01",
                    "type": "virtualNetworkPeerings",
                    "name": "Spoke2ToHub",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]",
                        "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke2vnetname'))]"
                    ],
                    "comments": "This is the peering from Spoke 2 to Hub",
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubvnetname'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('spoke2bastionpip')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[parameters('spoke2bastionhostname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('spoke2bastionpip'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke2vnetname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('spoke2bastionpip'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname')), '/subnets/', 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            },
            "tags": {
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('vm1storageacct')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('vm1storageacct')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm1nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke1vnetname'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm1nic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('spoke1vnetname')), '/subnets/', parameters('spoke1vnetvmsubnetname'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm1name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vm1storageacct'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm1nic'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm1name')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1"
                },
                "osProfile": {
                    "computerName": "[parameters('vm1name')]",
                    "adminUsername": "[parameters('adminuser')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[parameters('vm1disk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm1nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('vm2storageacct')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('vm2storageacct')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm2nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spoke2vnetname'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm2nic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('spoke2vnetname')), '/subnets/', parameters('spoke2vnetvmsubnetname'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm2name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vm2storageacct'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm2nic'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm2name')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1"
                },
                "osProfile": {
                    "computerName": "[parameters('vm2name')]",
                    "adminUsername": "[parameters('adminuser')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[parameters('vm2disk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm2nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('vm3storageacct')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('vm3storageacct')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('vm3nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('hubvnetname'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm3nic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.4",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname')), '/subnets/', parameters('hubvnetnvasubnetname'))]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true

            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm3name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vm3storageacct'))]",
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vm3nic'))]"
            ],
            "tags": {
                "displayName": "[parameters('vm3name')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1"
                },
                "osProfile": {
                    "computerName": "[parameters('vm3name')]",
                    "adminUsername": "[parameters('adminuser')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[parameters('vm3disk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vm3nic'))]"
                        }
                    ]
                }

            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "extensions",
                    "name": "config-nva",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vm3name'))]"
                    ],
                    "tags": {
                        "displayName": "config-nva"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "sysctl -w net.ipv4.ip_forward=1 && echo net.ipv4.ip_forward=1 > /etc/sysctl.d/99-ip-forward.conf && sysctl -p && iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE ! -d 10.0.0.0/8 && mkdir /etc/iptables && iptables-save > /etc/iptables/rules.v4 && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install iptables-persistent -qq"
                        }
                    }
                }
            ]



        }
    ],
    "outputs": {
        "VM 1 Name": {
            "type": "string",
            "value": "[parameters('vm1name')]"
        },
        "VM 2 Name": {
            "type": "string",
            "value": "[parameters('vm2name')]"
        },
        "VM 3 Name": {
            "type": "string",
            "value": "[parameters('vm3name')]"
        },
        "Administrator Account": {
            "type": "string",
            "value": "[parameters('adminuser')]"
        },
        "Administrator Password": {
            "type": "string",
            "value": "[parameters('adminpassword')]"
        }
    },
    "functions": [
    ]
}